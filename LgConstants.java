/* Generated By:JavaCC: Do not edit this line. LgConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface LgConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PROG = 7;
  /** RegularExpression Id. */
  int BEGIN = 8;
  /** RegularExpression Id. */
  int END = 9;
  /** RegularExpression Id. */
  int IF = 10;
  /** RegularExpression Id. */
  int THEN = 11;
  /** RegularExpression Id. */
  int ELSE = 12;
  /** RegularExpression Id. */
  int ENDIF = 13;
  /** RegularExpression Id. */
  int WHILE = 14;
  /** RegularExpression Id. */
  int READ = 15;
  /** RegularExpression Id. */
  int WRITE = 16;
  /** RegularExpression Id. */
  int LOOP = 17;
  /** RegularExpression Id. */
  int ENDLOOP = 18;
  /** RegularExpression Id. */
  int NULL = 19;
  /** RegularExpression Id. */
  int INT = 20;
  /** RegularExpression Id. */
  int BOOL = 21;
  /** RegularExpression Id. */
  int TRUE = 22;
  /** RegularExpression Id. */
  int FALSE = 23;
  /** RegularExpression Id. */
  int ASSERT = 24;
  /** RegularExpression Id. */
  int LPAR = 25;
  /** RegularExpression Id. */
  int RPAR = 26;
  /** RegularExpression Id. */
  int PV = 27;
  /** RegularExpression Id. */
  int DP = 28;
  /** RegularExpression Id. */
  int VIRG = 29;
  /** RegularExpression Id. */
  int AFFECT = 30;
  /** RegularExpression Id. */
  int IDF = 31;
  /** RegularExpression Id. */
  int INTPOS = 32;
  /** RegularExpression Id. */
  int PLUS = 33;
  /** RegularExpression Id. */
  int MULT = 34;
  /** RegularExpression Id. */
  int MOINS = 35;
  /** RegularExpression Id. */
  int DIV = 36;
  /** RegularExpression Id. */
  int AND = 37;
  /** RegularExpression Id. */
  int OR = 38;
  /** RegularExpression Id. */
  int NOT = 39;
  /** RegularExpression Id. */
  int SUP = 40;
  /** RegularExpression Id. */
  int INF = 41;
  /** RegularExpression Id. */
  int EGAL = 42;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"program\"",
    "\"begin\"",
    "\"end\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"endif\"",
    "\"while\"",
    "\"read\"",
    "\"write\"",
    "\"loop\"",
    "\"endloop\"",
    "\"null\"",
    "\"integer\"",
    "\"boolean\"",
    "\"true\"",
    "\"false\"",
    "\"assert\"",
    "\"(\"",
    "\")\"",
    "\";\"",
    "\":\"",
    "\",\"",
    "\":=\"",
    "<IDF>",
    "<INTPOS>",
    "\"+\"",
    "\"*\"",
    "\"-\"",
    "\"/\"",
    "\"&&\"",
    "\"||\"",
    "\"!\"",
    "\">\"",
    "\"<\"",
    "\"==\"",
  };

}
